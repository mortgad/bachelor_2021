substr(results$month_year_id[1], 6, 7)
substr(results$month_year_id[2], 6, 7)
substr(results$month_year_id[11], 6, 7)
substr(results$month_year_id[200], 6, 7)
results$month_year_id[200]
substr(results$month_year_id[200], 6, 7)
str_detect(substr(results$month_year_id[200], 6, 7), "_")
str_detect(substr(results$month_year_id[1], 6, 7), "_")
(results$month_year_id[1], 6, 7)
(results$month_year_id[1], 6, 7)
substr(results$month_year_id[1], 6, 7)
substr(results$month_year_id[1], 5, 7)
substr(results$month_year_id[1], 5, 7)
hep <- results %>% slice(0:100) %>% mutate(
date = ifelse(length(month_year_id) == 7, str_replace(month_year_id,"_", "-"), str_replace(month_year_id, "_", "-0"))
)
View(hep)
substr(results$month_year_id[1], 5)
substr(results$month_year_id[1], 5, 5)
substr(results$month_year_id[1], 5, 5) <- "-"
results$month_year_id[1]
hep <- results %>% slice(0:100) %>% mutate(
date = ifelse(length(month_year_id) == 7, substr(month_year_id, 5, 5) <- "-", substr(month_year_id, 5, 5) <- "-0")
)
View(hep)
hep <- results %>% slice(0:100) %>% mutate(
date = str_replace(month_year_id, "_", "-")
)
View(hep)
hep <- results %>% slice(0:200) %>% mutate(
date = str_replace(month_year_id, "_", "-")
)
as.date(hep$date[1])
as.Date(hep$date[1])
as.Date(paste0(hep$date[1], "-0"))
paste0(hep$date[1], "-0")
as.Date(paste0(hep$date[1], "-01"))
paste0(hep$date[200], "-01")
as.Date(paste0(hep$date[200], "-01"))
month(as.Date(paste0(hep$date[200], "-01")))
hep <- results %>% slice(0:200) %>% mutate(
date = str_replace(month_year_id, "_", "-")
date = as.Date(paste0(date, "-01"))
hep <- results %>% slice(0:200) %>% mutate(
date = str_replace(month_year_id, "_", "-"),
date = as.Date(paste0(date, "-01"))
)
View(hep)
# Load results dataframe
results <- read_csv("./data/agg_results_2009_2014.csv") %>%
# Creating date variable
mutate(
Date = str_replace(month_year_id, "_", "-"),
Date = as.Date(paste0(date, "-01"))
)
# Load results dataframe
results <- read_csv("./data/agg_results_2009_2014.csv") %>%
# Creating date variable
mutate(
Date = str_replace(month_year_id, "_", "-"),
Date = as.Date(paste0(Date, "-01"))
)
View(results)
results %>% group_by(Parti, month_year_id) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>% group_by(month_year_id) %>% summarise(mean = mean(mean)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(x = "Time",y = "Mean difference score", title = "Level of polarization in Folketinget")
results %>% group_by(Parti, Date) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>% group_by(Date) %>% summarise(mean = mean(mean)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(x = "Time",y = "Mean difference score", title = "Level of polarization in Folketinget")
#################### INSPECTING THE RESULTS ###########################
# Import the results
ML_results <- read_csv("./data/cv_results_subset.csv")
View(ML_results)
ML_results %>%
filter(Year ‰in‰ seq(2009,2014)) %>%
ML_results %>%
filter(Year %in% seq(2009,2014)) %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "Level of polarization in Folketinget")
ML_results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "ML - Level of polarization in Folketinget")
results %>% group_by(Parti, year(Date)) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>% group_by(year(Date)) %>% summarise(mean = mean(mean)) %>% ungroup() %>%
ggplot()+
aes(x = year(Date), y = mean)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(x = "Time",y = "Mean difference score", title = "Wordshoal - Level of polarization in Folketinget")
results %>% group_by(Parti, Date) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>% group_by(Date) %>% summarise(mean = mean(mean)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(x = "Time",y = "Mean difference score", title = "Wordshoal - Level of polarization in Folketinget")
results %>% mutate(year = year(Date)) group_by(Parti, year) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>% group_by(year) %>% summarise(mean = mean(mean)) %>% ungroup() %>%
results %>% mutate(year = year(Date)) %>% group_by(Parti, year) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>% group_by(year) %>% summarise(mean = mean(mean)) %>% ungroup() %>%
ggplot()+
aes(x = year, y = mean)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(x = "Time",y = "Mean difference score", title = "Wordshoal - Level of polarization in Folketinget")
results %>%  group_by(Parti, Date) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>% group_by(Date) %>% summarise(mean = mean(mean)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(x = "Time",y = "Mean difference score", title = "Wordshoal - Level of polarization in Folketinget")
results %>%  group_by(Parti, Date) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>% group_by(Date) %>% summarise(mean = mean(mean)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(x = "Time",y = "Mean difference score", title = "Wordshoal - Level of polarization in Folketinget")
results %>%  group_by(Parti, Date) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(x = "Time",y = "Mean difference score", title = "Wordshoal - Level of polarization in Folketinget")
results %>%  group_by(Parti, Date) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
facet_wrap(~Parti)
results %>%  group_by(Parti, Date) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(aes(color = Parti))+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 9, type = "continuous"))+
facet_wrap(~Parti)
results %>%  group_by(Parti, Date) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(aes(color = Parti))+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous")[2:10])+
facet_wrap(~Parti)
results %>%  group_by(Parti, Date) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(aes(color = Parti))+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous")[2:10])+
facet_wrap(~Parti)+
labs(x = "Time",y = "Mean difference score", title = "Wordshoal - Level of polarization in Folketinget")+
theme(legend.position = "none")
results %>%  group_by(Parti, Date) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(aes(color = Parti))+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous")[2:10])+
facet_wrap(~Parti)+
labs(x = "Time",y = "Mean difference score", title = "Wordshoal - Level of polarization in Folketinget per party")+
theme(legend.position = "none")
results %>%  group_by(Parti, Date) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(aes(color = Parti))+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous")[2:10])+
facet_wrap(~Parti)+
labs(x = "Time",y = "Mean difference score", title = "Wordshoal - Level of polarization in Folketinget per party")+
theme(legend.position = "none")
# Plotting the results
ML_results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "ML - Level of polarization in Folketinget")
# Setting up the theme
theme_set(theme_minimal())
# Plotting the results
ML_results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "ML - Level of polarization in Folketinget")
results %>%  group_by(Parti, Date) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>% group_by(Date) %>% summarise(mean = mean(mean)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(x = "Time",y = "Mean difference score", title = "Wordshoal - Level of polarization in Folketinget")
results %>%  group_by(Parti, Date) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>%
ggplot()+
aes(x = Date, y = mean)+
geom_point()+
geom_line(aes(color = Parti))+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous")[2:10])+
facet_wrap(~Parti)+
labs(x = "Time",y = "Mean difference score", title = "Wordshoal - Level of polarization in Folketinget per party")+
theme(legend.position = "none")
# Plotting the results
ML_results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "ML - Level of polarization in Folketinget")
# Plotting the results
ML_results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "ML - Level of polarization in Folketinget")
# Load results dataframe
results <- read_csv("./data/agg_results_2009_2014.csv") %>%
# Creating date variable
mutate(
Date = str_replace(month_year_id, "_", "-"),
Date = as.Date(paste0(Date, "-01"))
)
# Agregating results
results %>% group_by(Date, Parti) %>% arrange(-difference_score)
# Agregating results
results %>% group_by(month_year_id, Parti) %>% arrange(-difference_score)
# Agregating results
results %>% group_by(month_year_id, Parti)
# Agregating results
results %>% group_by(month_year_id, Parti) %>% arrange(-overlap_score)
# Agregating results
results %>% group_by(Parti, month_year_id) %>% arrange(-overlap_score)
# Agregating results
results %>% group_by(Parti, month_year_id) %>% summarise(arrange(-overlap_score))
# Agregating results
results %>% group_by(Parti, month_year_id) %>% mutate(overlap_score = arrange(-overlap_sc))
# Agregating results
results %>% group_by(Parti, month_year_id) %>% mutate(overlap_score = arrange(-overlap_score))
# Agregating results
results %>% group_by(Parti, month_year_id) %>% arrange(-overlap_score, .by_group = TRUE)
# Agregating results
results %>% group_by(Parti, month_year_id) %>% arrange(-overlap_score, .by_group = TRUE) %>% slice(1:5)
# Agregating results
results %>% group_by(Parti, month_year_id) %>% arrange(-overlap_score, .by_group = TRUE) %>% slice(1:3)
# Agregating results
results %>% group_by(Parti, month_year_id) %>% arrange(-overlap_score, .by_group = TRUE) %>% slice(1:3) %>%
summarise(mean_overlap = mean(overlap_score),
mean_difference = mean(difference_score),
mean_theta = mean_theta,
sd_theta = sd_theta)
# Agregating results
results %>% group_by(Parti, month_year_id) %>% arrange(-overlap_score, .by_group = TRUE) %>% slice(1:3) %>%
summarise(mean_overlap = mean(overlap_score),
mean_difference = mean(difference_score))
# Agregating results
results %>% group_by(Parti, month_year_id) %>% arrange(-overlap_score, .by_group = TRUE) %>% slice(1:3) %>%
summarise(mean_overlap = mean(overlap_score),
mean_difference = mean(difference_score)) %>%
left_join(x = .x, y = results, by = c("Parti" = "Parti", "month_year_id" = "month_year_id"))
# Agregating results
results %>% group_by(Parti, month_year_id) %>% arrange(-overlap_score, .by_group = TRUE) %>% slice(1:3) %>%
summarise(mean_overlap = mean(overlap_score),
mean_difference = mean(difference_score)) %>%
left_join(y = results, by = c("Parti" = "Parti", "month_year_id" = "month_year_id"))
left_join(x = agg, y = results, by = c("Parti" = "Parti", "month_year_id" = "month_year_id"))
# Agregating results
agg <- results %>% group_by(Parti, month_year_id) %>% arrange(-overlap_score, .by_group = TRUE) %>% slice(1:3) %>%
summarise(mean_overlap = mean(overlap_score),
mean_difference = mean(difference_score))
left_join(x = agg, y = results, by = c("Parti" = "Parti", "month_year_id" = "month_year_id"))
?left_join
View(results)
View(agg)
# Agregating results
agg <- results %>% group_by(Parti, Date) %>% arrange(-overlap_score, .by_group = TRUE) %>% slice(1:3) %>%
summarise(mean_overlap = mean(overlap_score),
mean_difference = mean(difference_score))
View(agg)
left_join(x = agg, y = results %>% select(c(Parti, Date, mean_theta, sd_theta)), by = c("Parti" = "Parti", "Date" = "Date"))
left_join(x = agg, y = results %>% select(c(Parti, Date, mean_theta, sd_theta)), by = c("Parti" = "Parti", "Date" = "Date")) %>% group_by(Parti, Date) %>% slice(1) %>% ungroup()
agg <- left_join(x = agg, y = results %>% select(c(Parti, Date, mean_theta, sd_theta)), by = c("Parti" = "Parti", "Date" = "Date")) %>% group_by(Parti, Date) %>% slice(1) %>% ungroup()
View(agg)
# Adding a lag column for the predictors - difference_score and sd_theta
agg %>% mutate(
lag_difference_score = lag(difference_score),
lag_sd_theta = lag(sd_theta)
)
# Adding a lag column for the predictors - difference_score and sd_theta
agg %>% mutate(
lag_difference_score = lag(mean_difference),
lag_sd_theta = lag(sd_theta)
)
# Adding a lag column for the predictors - difference_score and sd_theta
agg <- agg %>% mutate(
lag_difference_score = lag(mean_difference),
lag_sd_theta = lag(sd_theta)
)
# Modelling with lmer!!!
pacman::p_load(lmer)
# Modelling with lmer!!!
pacman::p_load(lme4)
# Agregating results into a single data frame - VERY MESSY i know
agg <- results %>% group_by(Parti, Date) %>% arrange(-overlap_score, .by_group = TRUE) %>% slice(1:3) %>%
summarise(overlap_score = mean(overlap_score),
difference_score = mean(difference_score))
agg <- left_join(x = agg, y = results %>% select(c(Parti, Date, mean_theta, sd_theta)), by = c("Parti" = "Parti", "Date" = "Date")) %>% group_by(Parti, Date) %>% slice(1) %>% ungroup()
# Adding a lag column for the predictors - difference_score and sd_theta
agg <- agg %>% mutate(
lag_difference_score = lag(difference_score ),
lag_sd_theta = lag(sd_theta)
)
#  m1: InclusionSD_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m1 <- lmer(sd_theta ~ 1 + lag_sd_theta + lag_difference_score, data = agg)
#  m1: InclusionSD_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m1 <- lm(sd_theta ~ 1 + lag_sd_theta + lag_difference_score, data = agg)
summary(m1)
# m2: Overlapping_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m2 <- lm(difference_score ~ 1 + lag_difference_score + lag_sd_theta, data = agg)
summary(m2)
#  m1: InclusionSD_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m1 <- lm(sd_theta ~ 1 + lag_sd_theta + lag_difference_score, data = agg)
summary(m1)
#  m1: InclusionSD_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m1 <- lmer(sd_theta ~ 1 + lag_sd_theta + lag_difference_score +
(1 + lag_sd_theta + lag_difference_score | Parti), data = agg)
summary(m1)
summary(m1)
#  m1: InclusionSD_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m1 <- lm(sd_theta ~ 1 + lag_sd_theta + lag_difference_score, data = agg)
# Modelling with lmer!!!
pacman::p_load(lme4)
#  m1: InclusionSD_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m1 <- lm(sd_theta ~ 1 + lag_sd_theta + lag_difference_score, data = agg)
summary(m1)
m2 <- lmer(sd_theta ~ 1 + lag_sd_theta + lag_difference_score + (1 + lag_sd_theta + lag_difference_score | Parti), data = agg)
summary(m2)
# m3: Overlapping_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m3 <- lm(difference_score ~ 1 + lag_difference_score + lag_sd_theta, data = agg)
summary(m3)
m4 <- lm(difference_score ~ 1 + lag_difference_score + lag_sd_theta + (1 + lag_difference_score + lag_sd_theta | Parti), data = agg)
# m3: Overlapping_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m3 <- lm(difference_score ~ 1 + lag_difference_score + lag_sd_theta, data = agg)
summary(m3)
m4 <- lmer(difference_score ~ 1 + lag_difference_score + lag_sd_theta + (1 + lag_difference_score + lag_sd_theta | Parti), data = agg)
summary(m4)
#  m1: InclusionSD_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m1 <- lm(sd_theta ~ 1 + lag_sd_theta + lag_difference_score, data = agg)
summary(m1)
# Importing data
df <- read_csv("data/folketinget_2009_2021_raw.csv") %>% filter(Year %in% c(2019, 2020))
# Color pallette
pal <- wesanderson::wes_palette("Darjeeling1", 14, type = "continuous")
# Setting up the theme
theme_set(theme_minimal())
##### Inspecting the distribution of speeches for each party
# Inspecting the data
df %>% count(Parti) %>%
ggplot()+
aes(x = reorder(Parti, -n), y = n, fill = Parti, label = n)+
geom_col(width=0.5, position='dodge') +
geom_text(position=position_dodge(0.5), vjust=-.50) +
scale_fill_manual(values = pal)+
labs(y="Count", x="Parti", title = "Number of speeches from each party") +
ylim(0, 13000)+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
legend.position = "none")
# loading packages
pacman::p_load(tidyverse, corpus, devtools, lubridate, flux, stopwords, seededlda)
# Installing the latest version of quanteda and wordshoal
#devtools::install_github("https://github.com/quanteda/quanteda")
#remotes::install_github("kbenoit/wordshoal")
#devtools::install_github("quanteda/quanteda.corpora")
# Loading the packages
library(quanteda)
library(wordshoal)
library(quanteda.textmodels)
library(quanteda.corpora)
# Importing data
df <- read_csv("./data/folketinget_2009_2021_raw.csv")
# Filtering out parties
parties_to_remove <- c("Uden for partierne", "Venstresocialisterne")
df <- df %>%
filter(!Parti %in% parties_to_remove) %>%
# Changing konservative folkeparti
mutate(
Parti = ifelse(Parti == "Konservative Folkeparti","Det Konservative Folkeparti", Parti),
Parti = ifelse(Parti == "Det Radikale Venstre","Radikale Venstre", Parti),
month_year_id = paste0(Year,"_", month(Date)) # Making a month and year unique variable
) %>%
#removing documents with less than 10 speaches
group_by(id) %>%
filter(n() > 10) %>% ungroup() %>%
# Removing all formand because of procedural and lots of mistakes.
filter(!Title %in% c("Formanden","Formand")) %>%
# filtering out all duplicates
group_by(doc_id) %>% filter(n() < 2) %>% ungroup()
############## corpus per month ###################
years = seq(2015,2017) # Years to loop through
df_subset <- df %>% filter(Year %in% years)
months = unique(df_subset$month_year_id) # input list
i=1
wordshoaler <- function(month) {
cat(paste0("[ ] Shoaling Month ", month, ". Month: ", i, " out of ", length(months), "\n"))
shoal_df = df_subset %>% filter(month_year_id == paste0(month))
corpuseret = quanteda::corpus(shoal_df)
dfmmm <- dfm(tokens(corpuseret), remove_punct = TRUE, ignoredFeatures = stopwords("danish")) # matrix making
wordshoalfit <- wordshoal::textmodel_wordshoal(dfmmm, groups = docvars(corpuseret, "id"),
authors = docvars(corpuseret, "Name"))
author_positions <- summary(wordshoalfit)$estimated.author.positions
author_positions$row_names <- rownames(author_positions)
fitdf <- merge(author_positions,
docvars(corpuseret),
by.x = "row_names", by.y = "Name")
fitdf <- subset(fitdf, !duplicated(row_names))
thetascores <<- rbind(thetascores, fitdf)
i <<- i + 1
}
thetascores <- data.frame()
map(months, wordshoaler)
# writing the estimates
filename = paste0("./data/wordshoal_results/wordshoal_estimates_", min(years), "_", max(years), ".csv")
write_csv(thetascores, filename)
############## corpus per month ###################
years = seq(2018,2021) # Years to loop through
df_subset <- df %>% filter(Year %in% years)
months = unique(df_subset$month_year_id) # input list
i=1
wordshoaler <- function(month) {
cat(paste0("[ ] Shoaling Month ", month, ". Month: ", i, " out of ", length(months), "\n"))
shoal_df = df_subset %>% filter(month_year_id == paste0(month))
corpuseret = quanteda::corpus(shoal_df)
dfmmm <- dfm(tokens(corpuseret), remove_punct = TRUE, ignoredFeatures = stopwords("danish")) # matrix making
wordshoalfit <- wordshoal::textmodel_wordshoal(dfmmm, groups = docvars(corpuseret, "id"),
authors = docvars(corpuseret, "Name"))
author_positions <- summary(wordshoalfit)$estimated.author.positions
author_positions$row_names <- rownames(author_positions)
fitdf <- merge(author_positions,
docvars(corpuseret),
by.x = "row_names", by.y = "Name")
fitdf <- subset(fitdf, !duplicated(row_names))
thetascores <<- rbind(thetascores, fitdf)
i <<- i + 1
}
thetascores <- data.frame()
map(months, wordshoaler)
# writing the estimates
filename = paste0("./data/wordshoal_results/wordshoal_estimates_", min(years), "_", max(years), ".csv")
write_csv(thetascores, filename)
