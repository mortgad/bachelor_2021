map_df(~read_csv(file = .x))
View(ratings)
write_csv(ratings, "./data/assesment/gustav_ratings.csv")
knitr::opts_chunk$set(echo = TRUE)
sgd %>%
ggplot()+
aes(x = Year, y = score, color = metric)+
geom_point()+
geom_smooth(alpha = 0.1, size = 0.5)+
facet_wrap(~class)+
theme_minimal()
pacman::p_load(tidyverse)
sgd %>%
ggplot()+
aes(x = Year, y = score, color = metric)+
geom_point()+
geom_smooth(alpha = 0.1, size = 0.5)+
facet_wrap(~class)+
theme_minimal()
#################### INSPECTING THE RESULTS ###########################
# Import the results
setwd("~/bachelor_2021/d")
#################### INSPECTING THE RESULTS ###########################
# Import the results
pacman::p_load(tidyverse)
ML_results <- read_csv("./data/cv_results_1990-2021_ny.csv")
ML_subset <- read_csv("./data/cv_results_subset.csv")
ML_coalition <- read_csv("./data/cv_results_1990-2021_coalition.csv")
pacman::p_load(lme4)
coalition <- ML_coalition %>% group_by(Year) %>% summarise(coalition_kappa = mean(kappa_test), coalition_acc = mean(accuracy_score)) %>% pivot_longer(cols = c("coalition_kappa", "coalition_acc"), names_to = "metric", values_to = "score")
party <- ML_results %>% group_by(Year) %>% summarise(party_kappa = mean(kappa_test), party_acc = mean(accuracy_score)) %>% pivot_longer(cols = c("party_kappa", "party_acc"), names_to = "metric", values_to = "score")
sgd <- rbind(coalition, party) %>% mutate(class = ifelse(str_detect(metric, "coalition"), "coalition","party"))
sgd %>%
ggplot()+
aes(x = Year, y = score, color = metric)+
geom_point()+
geom_smooth(alpha = 0.1, size = 0.5)+
facet_wrap(~class)+
theme_minimal()
sgd %>%
ggplot()+
aes(x = Year, y = score, color = metric)+
geom_point()+
geom_line(size = 0.5)+
#geom_smooth(alpha = 0.1, size = 0.5)+
facet_wrap(~class)+
theme_minimal()
ML_twoparty <- read_csv("./data/cv_results_1990-2021_twoparty.csv")
View(ML_twoparty)
ML_twoparty %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "Coalition")+
theme_minimal()
# Plotting the results
ML_subset %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "Subset")+
theme_minimal()
ML_results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "Whole dataset")+
theme_minimal()
ML_coalition %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "Coalition")+
theme_minimal()
ML_twoparty %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "Coalition")+
theme_minimal()
ML_twoparty %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "Coalition")+
theme_minimal()
ML_twoparty %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "SD vs. Venstre")+
theme_minimal()
ML_twoparty %>%
group_by(Year) %>%
summarise(kappa = mean(accuracy_score)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "SD vs. Venstre")+
theme_minimal()
ML_twoparty %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "SD vs. Venstre")+
theme_minimal()
hep <- read_csv("./data/folketinget_1990_2021_raw.csv")
hej <- hep %>% filter(Parti %in% c("Venstre", "Socialdemokratiet"))
hej %>% group_by(Month, Parti) %>% summarize(n())
permonth <- hej %>% group_by(Month, Parti) %>% summarize(n())
View(permonth)
permonth <- hej %>% group_by(Year, Parti) %>% summarize(n())
per <- hej %>% group_by(Year, Parti) %>% summarize(n())
View(per)
# Plotting the results
ML_subset %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "Subset")+
theme_minimal()
ML_results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "Whole dataset")+
theme_minimal()
ML_coalition %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "Coalition")+
theme_minimal()
ML_twoparty %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "SD vs. Venstre")+
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
# Setting the theme
theme_set(theme_minimal())
# packages
pacman::p_load(tidyverse, dplyr, stringdist)
# Setting the theme
theme_set(theme_minimal())
# Function for setting color theme
Darjeeling1 <- function(no_of_colors){
colors = wesanderson::wes_palette("Darjeeling1", no_of_colors, type = "continuous")
return(colors)
}
# load data
data <- read_csv("./data/folketinget_1990_2021_raw.csv")
################################ No. of speeches per party ###################################
data %>%
count(Parti) %>%
ggplot()+
aes(x = reorder(Parti, -n), y = n, fill = Parti, label = n)+
geom_col(width=0.5, position='dodge') +
scale_fill_manual(values = Darjeeling1(length(unique(data$Parti))))+
geom_text(position=position_dodge(0.5), vjust=-.50) +
labs(x="Party", title = "No. of speeches per party") +
ylim(0, 60000)+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
legend.position = "none",
axis.title.y = element_blank())
################################ No. of speeches per party ###################################
data %>%
count(Parti) %>%
ggplot()+
aes(x = reorder(Parti, -n), y = n, fill = Parti, label = n)+
geom_col(width=0.5, position='dodge') +
scale_fill_manual(values = Darjeeling1(length(unique(data$Parti))))+
geom_text(position=position_dodge(0.5), vjust=-.50) +
labs(x="Party", title = "No. of speeches per party") +
#ylim(0, 60000)+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
legend.position = "none",
axis.title.y = element_blank())
################################ No. of speeches per party ###################################
data %>%
count(Parti) %>%
ggplot()+
aes(x = reorder(Parti, -n), y = n, fill = Parti, label = n)+
geom_col(width=0.5, position='dodge') +
scale_fill_manual(values = Darjeeling1(length(unique(data$Parti))))+
geom_text(position=position_dodge(0.5), vjust=-.50) +
labs(x="Party", title = "No. of speeches per party") +
ylim(0, 110000)+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
legend.position = "none",
axis.title.y = element_blank())
################################## NUMBER OF SPEECHES PR. MEMBER PR. YEAR ##########################################
# Wrangling
data %>% group_by(Year, Name, Parti) %>% count() %>%
ungroup() %>% group_by(Year) %>%
summarise(mean = mean(n),
median = median(n),
fifth = quantile(n, probs = 0.05),
nintyfifth = quantile(n, probs = 0.95)
) %>% pivot_longer(!Year) %>%
# Plotting
ggplot()+
aes(x = Year, y = value, color = name, linetype = name)+
geom_line()+
guides(linetype = FALSE)+
scale_color_manual(labels = c("5th %ile", "Mean", "Median", "95th %ile"),
values = wesanderson::wes_palette("Darjeeling1", n = 4))+
labs(x = "Year",
y = "No. of Speeches",
title = "No. of speeches per person")+
theme(legend.title = element_blank(),
legend.key = element_rect(color = alpha("black", 0.2)),
axis.title.y = element_blank())
############################# LENGTH OF SPEECHES #######################################
# Wrangling
data %>% group_by(Year) %>%
summarise(mean = mean(n_words),
median = median(n_words),
fifth = quantile(n_words, probs = 0.05),
nintyfifth = quantile(n_words, probs = 0.95)
) %>% pivot_longer(!Year) %>%
# Plotting
ggplot()+
aes(x = Year, y = value, color = name, linetype = name)+
geom_line(size = 1)+
guides(linetype = FALSE)+
scale_color_manual(labels = c("5th %ile", "Mean", "Median", "95th %ile"),
values = Darjeeling1(4))+
labs(x = "Year",
y = "Speech length",
title = "Speech length (no. of characters)")+
theme(legend.title = element_blank(),
legend.key = element_rect(color = alpha("black", 0.2)),
axis.title.y = element_blank())
############################# LENGTH OF SPEECHES #######################################
# Wrangling
data %>% group_by(Year) %>%
summarise(mean = mean(n_words),
median = median(n_words),
fifth = quantile(n_words, probs = 0.05),
nintyfifth = quantile(n_words, probs = 0.95)
) %>% pivot_longer(!Year) %>%
# Plotting
ggplot()+
aes(x = Year, y = value, color = name, linetype = name)+
geom_line(size = 1)+
guides(linetype = FALSE)+
scale_color_manual(labels = c("5th %ile", "Mean", "Median", "95th %ile"),
values = Darjeeling1(4))+
labs(x = "Year",
y = "Speech length",
title = "Speech length (no. of words)")+
theme(legend.title = element_blank(),
legend.key = element_rect(color = alpha("black", 0.2)),
axis.title.y = element_blank())
############################# LENGTH OF SPEECHES #######################################
# Wrangling
data %>% group_by(Year) %>%
summarise(mean = mean(n_words),
median = median(n_words),
fifth = quantile(n_words, probs = 0.05),
nintyfifth = quantile(n_words, probs = 0.95)
) %>% pivot_longer(!Year) %>%
# Plotting
ggplot()+
aes(x = Year, y = value, color = name, linetype = name)+
geom_line(size = 1)+
guides(linetype = FALSE)+
scale_color_manual(labels = c("5th %ile", "Mean", "Median", "95th %ile"),
values = Darjeeling1(4))+
ylim(0,1500)+
labs(x = "Year",
y = "Speech length",
title = "Speech length (no. of words)")+
theme(legend.title = element_blank(),
legend.key = element_rect(color = alpha("black", 0.2)),
axis.title.y = element_blank())
data %>% filter(Parti %in% c("Venstre", "Socialdemokratiet"))
hep <- data %>% mutate(big = ifelse(Parti %in% c("Venstre", "Socialdemokratiet"), 1, 0)
hep <- data %>% mutate(big = ifelse(Parti %in% c("Venstre", "Socialdemokratiet"), 1, 0)
hep <- data %>% mutate(big = ifelse(Parti %in% c("Venstre", "Socialdemokratiet"), 1, 0)
hep <- data %>% mutate(big = ifelse(Parti %in% c("Venstre", "Socialdemokratiet"), 1, 0))
hep <- data %>% mutate(big = ifelse(Parti %in% c("Venstre", "Socialdemokratiet"), 1, 0))
sum(hep$big)/nrow(hep)
############################################### RATING RESULTS ######################################################
agg_ratings <- rbind(read_csv("./data/gustav_ratings.csv"), read_csv("./data/morten_ratings.csv")) %>%
group_by(assignment, split) %>%
summarise(n = n()) %>%
mutate(assignment = ifelse(assignment == 1, 0, 1),
split = ifelse(split == 1, 0, 1)) %>%
ungroup() %>%
add_row(assignment = 1, split = 0, n = 0)
# by year
ratings <- rbind(read_csv("./data/gustav_ratings.csv"), read_csv("./data/morten_ratings.csv")) %>%
left_join(samples, by = "doc_id") %>%
mutate(split = ifelse(split == 1, 0, 1),
assignment = ifelse(assignment == 1, 0, 1),
agg = ifelse(split == 0 & assignment == 0, 0, 1)) %>%
group_by(Year) %>%
summarise(wrong = sum(agg))
# sample ~200 values across different years
set.seed(124)
samples <- data %>% group_by(Year) %>% sample_n(round(200/length(unique(data[["Year"]])))) %>% ungroup() %>% select(id, text, doc_id, Year, Name)
############################################### RATING RESULTS ######################################################
agg_ratings <- rbind(read_csv("./data/gustav_ratings.csv"), read_csv("./data/morten_ratings.csv")) %>%
group_by(assignment, split) %>%
summarise(n = n()) %>%
mutate(assignment = ifelse(assignment == 1, 0, 1),
split = ifelse(split == 1, 0, 1)) %>%
ungroup() %>%
add_row(assignment = 1, split = 0, n = 0)
# by year
ratings <- rbind(read_csv("./data/gustav_ratings.csv"), read_csv("./data/morten_ratings.csv")) %>%
left_join(samples, by = "doc_id") %>%
mutate(split = ifelse(split == 1, 0, 1),
assignment = ifelse(assignment == 1, 0, 1),
agg = ifelse(split == 0 & assignment == 0, 0, 1)) %>%
group_by(Year) %>%
summarise(wrong = sum(agg))
ggplot(data = ratings)+
geom_col(aes(x=Year,y=wrong))+
geom_smooth(aes(x=Year,y=wrong), method = "lm", se=F, )+
theme_minimal()+
labs(y = "No. of documents", x = "Year", title = "Documents either assigned or split incorrectly")
View(agg_ratings)
overlaps <- read_csv("~/bachelor_2021/data/overlap_results_raw.csv")
overlaps %>% group_by(Month) %>% summarize(mean = mean(overlaps.OV))
polarization <- overlaps %>% group_by(Month) %>% summarize(mean = mean(overlaps.OV))
View(polarization)
polarization <- mutate(Year = year(Month))
library(ggplot2, tidyverse, dmy)
polarization <- mutate(Year = year(Month))
?year
library(ggplot2, tidyverse, lubridate)
polarization <- mutate(Year = year(Month))
polarization <- mutate(Year = lubridate::year(Month))
polarization <- mutate(Year = lubridate::year(Month))
overlaps <- mutate(Year = lubridate::year(Month))
overlaps <- overlaps %>% mutate(Year = lubridate::year(Month))
polarization <- polarization %>% mutate(Year = lubridate::year(Month))
View(polarization)
overlaps <- overlaps %>% mutate(Year = lubridate::year(Month))
polarization <- overlaps %>% group_by(Year) %>% summarize(mean = mean(overlaps.OV))
ggplot(data = polarization, aes(x = Year, y = mean))+
geom_point()
ggplot(data = polarization, aes(x = Year, y = mean))+
geom_point()+
geom_line()+
ggplot(data = polarization, aes(x = Year, y = mean))+
geom_point()+
geom_line()
ggplot(data = polarization, aes(x = Year, y = mean))+
geom_point()+
geom_smooth()
View(polarization)
ggplot(data = polarization, aes(x = Year, y = mean))+
geom_point()+
geom_line()
library(tidyverse, ggplot2, lubridate)
library(tidyverse, ggplot2, lubridate)
polarization %>%
ggplot()+
aes(x = Year, y = mean)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
#ylim(0, 1)+
labs(y = "Mean overlap", title = "Wordshoal Polarization")+
theme_minimal()
polarization <- overlaps %>%
group_by(Year) %>%
summarize(mean = mean(overlaps.OV)) %>%
mutate(method = "Wordshoal")
overlaps <- read_csv("~/bachelor_2021/data/overlap_results_raw.csv") %>%
mutate(Year = lubridate::year(Month))
ML_results <- read_csv("./data/cv_results_1990-2021_ny.csv")
ML_results <- read_csv("./data/cv_results_1990-2021_ny.csv") %>%
mutate(method = "Classifier")
View(ML_results)
polarization <- overlaps %>%
group_by(Year) %>%
summarize(overlap = mean(overlaps.OV)) %>%
mutate(method = "Wordshoal",
mean = 1 - overlap) %>%
select(Year, mean)
select(Year, mean)
select(Year, mean)
ML_results <- read_csv("./data/cv_results_1990-2021_ny.csv") %>%
ML_results <- read_csv("./data/cv_results_1990-2021_ny.csv") %>%
group_by(Year) %>%
summarise(mean = mean(kappa_test)) %>%
mutate(method = "Classifier") %>%
select(Year, mean)
ML_results <- read_csv("./data/cv_results_1990-2021_ny.csv") %>%
group_by(Year) %>%
summarise(mean = mean(kappa_test)) %>%
mutate(method = "Classifier") %>%
select(Year, mean)
View(ML_results)
ML_results <- read_csv("./data/cv_results_1990-2021_ny.csv") %>%
group_by(Year) %>%
summarise(mean = mean(kappa_test)) %>%
mutate(method = "Classifier") %>%
select(Year, mean, method)
polarization <- overlaps %>%
group_by(Year) %>%
summarize(overlap = mean(overlaps.OV)) %>%
mutate(method = "Wordshoal",
mean = 1 - overlap) %>%
select(Year, mean, method)
comparison <- rbind(polarization, ML_results)
View(comparison)
comparison %>%
ggplot()+
aes(x = Year, y = mean, color = method)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
#ylim(0, 1)+
labs(title = "Polarization")+
theme_minimal()
#ylim(0, 1)+
labs(title = "Polarization")+
theme_minimal()
comparison %>%
ggplot()+
aes(x = Year, y = mean, color = method)+
geom_point()+
geom_line()+
geom_smooth(alpha = 0.1, size = 0.5)+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1"))
comparison %>%
ggplot()+
aes(x = Year, y = mean, color = method)+
geom_point()+
geom_line()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1"))
cor(ML_results$mean, polarization$mean)
cor.test(ML_results$mean, polarization$mean)
#ylim(0, 1)+
labs(title = "Polarization")+
theme_minimal()
comparison %>%
ggplot()+
aes(x = Year, y = mean, color = method)+
geom_point()+
geom_line()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1"))
