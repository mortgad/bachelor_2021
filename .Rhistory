# Plotting difference
agg %>% mutate(Inclusion_change = sd_theta-lag_sd_theta) %>% group_by(Date) %>%
summarise(Inclusion_change = mean(Inclusion_change),
Differentiation = mean(difference_score)) %>% pivot_longer(cols = c("Inclusion", "Differentiation"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
# Plotting difference
agg %>% mutate(Inclusion_change = sd_theta-lag_sd_theta) %>% group_by(Date) %>%
summarise(Inclusion_change = mean(Inclusion_change),
Differentiation = mean(difference_score)) %>% pivot_longer(cols = c("Inclusion", "Differentiation"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
# Plotting difference
agg %>% mutate(Inclusion_change = sd_theta-lag_sd_theta) %>% group_by(Date) %>%
summarise(Inclusion_change = mean(Inclusion_change),
Differentiation = mean(difference_score)) %>% pivot_longer(cols = c("Inclusion_change", "Differentiation"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
# Adding a lag column for the predictors - difference_score and sd_theta
agg <- agg %>% mutate(
lag_difference_score = lag(difference_score ),
lag_sd_theta = lag(sd_theta),
Inclusion_change = sd_theta - lag_sd_theta,
Differentiation_change = difference_score - lag_difference_score
)
#  m1: InclusionSD_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m1 <- lm(Inclusion_change ~ 1 + lag_sd_theta + lag_difference_score, data = agg)
summary(m1)
m2 <- lmer(Inclusion_change ~ 1 + lag_sd_theta + lag_difference_score + (1 + lag_sd_theta + lag_difference_score | Parti), data = agg)
summary(m2)
m1 <- lm(Inclusion_change ~ 1 + lag_sd_theta + lag_difference_score, data = agg)
summary(m1)
m2 <- lmer(Inclusion_change ~ 1 + lag_sd_theta + lag_difference_score + (1 + lag_sd_theta + lag_difference_score | Parti), data = agg)
summary(m2)
# m3: Overlapping_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m3 <- lm(Differentiation_change ~ 1 + lag_difference_score + lag_sd_theta, data = agg)
summary(m3)
m4 <- lmer(Differentiation_change ~ 1 + lag_difference_score + lag_sd_theta + (1 + lag_difference_score + lag_sd_theta | Parti), data = agg)
summary(m4)
# Adding a lag column for the predictors - difference_score and sd_theta
agg <- agg %>% mutate(
lag_difference_score = lag(difference_score ),
lag_sd_theta = lag(sd_theta),
Inclusion_change = lead(sd_theta) - sd_theta,
Differentiation_change = lead(difference_score) - difference_score
)
#  m1: InclusionSD_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m1 <- lm(Inclusion_change ~ 1 + lag_sd_theta + lag_difference_score, data = agg)
summary(m1)
m2 <- lmer(Inclusion_change ~ 1 + lag_sd_theta + lag_difference_score + (1 + lag_sd_theta + lag_difference_score | Parti), data = agg)
summary(m2)
# m3: Overlapping_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m3 <- lm(Differentiation_change ~ 1 + lag_difference_score + lag_sd_theta, data = agg)
summary(m3)
m4 <- lmer(Differentiation_change ~ 1 + lag_difference_score + lag_sd_theta + (1 + lag_difference_score + lag_sd_theta | Parti), data = agg)
summary(m4)
# Plotting difference
agg %>% mutate(Inclusion_change = sd_theta-lag_sd_theta) %>% group_by(Date) %>%
summarise(Inclusion_change = mean(Inclusion_change),
Differentiation = mean(difference_score),
Inclusion = mean(sd_theta)) %>%
pivot_longer(cols = c("Inclusion_change", "Differentiation", "Inclusion"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
# Plotting difference
agg %>% mutate(Inclusion_change = sd_theta-lag_sd_theta) %>% group_by(Date) %>%
summarise(Inclusion_change = mean(Inclusion_change),
Differentiation = mean(difference_score),
Inclusion = mean(lag_sd_theta)) %>%
pivot_longer(cols = c("Inclusion_change", "Differentiation", "Inclusi"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
# Plotting difference
agg %>% mutate(Inclusion_change = sd_theta-lag_sd_theta) %>% group_by(Date) %>%
summarise(Inclusion_change = mean(Inclusion_change),
Differentiation = mean(difference_score),
Inclusion = mean(lag_sd_theta)) %>%
pivot_longer(cols = c("Inclusion_change", "Differentiation", "Inclusion"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
m2 <- lmerTest::lmer(Inclusion_change ~ 1 + lag_sd_theta + lag_difference_score + (1 + lag_sd_theta + lag_difference_score | Parti), data = agg)
summary(m2)
# Load results dataframe
results <- read_csv("./data/agg_results_2009_2021.csv") %>%
# Creating date variable
mutate(
Date = str_replace(month_year_id, "_", "-"),
Date = as.Date(paste0(Date, "-01"))
)
######## Preprocessing #########3
# Agregating results into a single data frame - VERY MESSY i know
agg <- results %>% group_by(Parti, Date) %>% arrange(-overlap_score, .by_group = TRUE) %>% slice(1:3) %>%
summarise(overlap_score = mean(overlap_score),
difference_score = mean(difference_score))
agg <- left_join(x = agg, y = results %>% select(c(Parti, Date, mean_theta, sd_theta)), by = c("Parti" = "Parti", "Date" = "Date")) %>% group_by(Parti, Date) %>% slice(1) %>% ungroup()
# Adding a lag column for the predictors - difference_score and sd_theta
agg <- agg %>% mutate(
lag_difference_score = lag(difference_score ),
lag_sd_theta = lag(sd_theta)
)
#plotting the raw data
agg %>% group_by(Date) %>% summarise(Inclusion = mean(sd_theta),
Differentiation = mean(difference_score)) %>% pivot_longer(cols = c("Inclusion", "Differentiation"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
#  m1: InclusionSD_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m1 <- lm(sd_theta ~ 1 + lag_sd_theta + lag_difference_score, data = agg)
summary(m1)
m2 <- lmerTest::lmer(sd_theta ~ 1 + lag_sd_theta + lag_difference_score + (1 + lag_sd_theta + lag_difference_score | Parti), data = agg)
summary(m2)
# m3: Overlapping_t2 ~ 1 + InclusionSD_t1 + Overlapping_t1 + (1 + InclusionSD_t1 + Overlapping_t1 | Party)
m3 <- lm(difference_score ~ 1 + lag_difference_score + lag_sd_theta, data = agg)
summary(m3)
m4 <- lmerTest::lmer(difference_score ~ 1 + lag_difference_score + lag_sd_theta + (1 + lag_difference_score + lag_sd_theta | Parti), data = agg)
summary(m4)
# Interaction model
m3 <- lm(sd_theta ~ lag_sd_theta*lag_difference_score)
# Interaction model
m3 <- lm(sd_theta ~ lag_sd_theta*lag_difference_score, data = agg)
summary(m3)
# Interaction model
m3 <- lm(sd_theta ~ lag_sd_theta:lag_difference_score, data = agg)
summary(m3)
# Interaction model
m3 <- lm(sd_theta ~ lag_sd_theta*lag_difference_score, data = agg)
summary(m3)
# Interaction model
m3 <- lm(sd_theta ~ lag_sd_theta*lag_difference_score, data = agg, REML = F,
control = lmerControl(optimizer = "nloptwrap", calc.derivs = F))
summary(m3)
# Interaction model
m3 <- lm(sd_theta ~ 0 + lag_sd_theta:lag_difference_score, data = agg)
summary(m3)
# Interaction model
m3 <- lm(sd_theta ~ 1 + lag_sd_theta:lag_difference_score, data = agg)
summary(m3)
# Interaction model
m3 <- lm(sd_theta ~ lag_sd_theta*lag_difference_score, data = agg)
# Interaction model
m3 <- lm(sd_theta ~ lag_sd_theta*lag_difference_score + (1 + lag_sd_theta + lag_difference_score | Parti), data = agg)
# Interaction model
m3 <- lm(sd_theta ~ lag_sd_theta*lag_difference_score + (1 + lag_sd_theta*lag_difference_score | Parti), data = agg)
# Interaction model
m3 <- lmerTest:lmer(sd_theta ~ lag_sd_theta*lag_difference_score + (1 + lag_sd_theta*lag_difference_score | Parti), data = agg)
# Interaction model
m3 <- lmerTest::lmer(sd_theta ~ lag_sd_theta*lag_difference_score + (1 + lag_sd_theta*lag_difference_score | Parti), data = agg)
summary(m3)
# Loading packages
pacman::p_load(tidyverse, brms, here)
# Load results dataframe
results <- read_csv("./data/agg_results_2009_2021.csv") %>%
# Creating date variable
mutate(
Date = str_replace(month_year_id, "_", "-"),
Date = as.Date(paste0(Date, "-01"))
)
######## Preprocessing #########3
# Agregating results into a single data frame - VERY MESSY i know
agg <- results %>% group_by(Parti, Date) %>% arrange(-overlap_score, .by_group = TRUE) %>% slice(1:3) %>%
summarise(overlap_score = mean(overlap_score),
difference_score = mean(difference_score))
agg <- left_join(x = agg, y = results %>% select(c(Parti, Date, mean_theta, sd_theta)), by = c("Parti" = "Parti", "Date" = "Date")) %>% group_by(Parti, Date) %>% slice(1) %>% ungroup()
# Adding a lag column for the predictors - difference_score and sd_theta
agg <- agg %>% mutate(
lag_difference_score = lag(difference_score ),
lag_sd_theta = lag(sd_theta)
)
#plotting the raw data
agg %>% group_by(Date) %>% summarise(Inclusion = mean(sd_theta),
Differentiation = mean(difference_score)) %>% pivot_longer(cols = c("Inclusion", "Differentiation"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
#plotting the raw data
agg %>% group_by(Date) %>% summarise(Inclusion = mean(sd_theta),
Differentiation = mean(difference_score)) %>% pivot_longer(cols = c("Inclusion", "Differentiation"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
#checking out the outome variable
summary(agg$sd_theta)
ggplot(df, aes(x = Pitch_IQR)) +
geom_density()
ggplot(agg, aes(x = sd_thetta)) +
geom_density()
ggplot(agg, aes(x = sd_theta)) +
geom_density()
#plotting the raw data
agg %>% group_by(Date) %>% summarise(Inclusion = mean(sd_theta),
Differentiation = mean(difference_score)) %>% pivot_longer(cols = c("Inclusion", "Differentiation"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
ggplot(agg, aes(x = sd_theta)) +
geom_density()
#plotting the raw data
agg %>% group_by(Date) %>% summarise(Inclusion = mean(sd_theta),
Differentiation = mean(lag_difference_score)) %>% pivot_longer(cols = c("Inclusion", "Differentiation"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
#plotting the raw data
agg %>% group_by(Date) %>% summarise(Inclusion = mean(sd_theta),
Differentiation = mean(lag_difference_score)) %>% pivot_longer(cols = c("Inclusion", "Differentiation"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
#plotting the raw data
agg %>% group_by(Date) %>% summarise(Inclusion = mean(sd_theta),
Lag_Differentiation = mean(lag_difference_score),
Lag_Inclusion = mean(lag_sd_theta)) %>% pivot_longer(cols = c("Inclusion", "Lag_Differentiation"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
#plotting the raw data
agg %>% group_by(Date) %>% summarise(Inclusion = mean(sd_theta),
Lag_Differentiation = mean(lag_difference_score),
Lag_Inclusion = mean(lag_sd_theta)) %>% pivot_longer(cols = c("Inclusion", "Lag_Differentiation", "Lag_Inclusion"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
#plotting the raw data
agg %>% group_by(Date) %>% summarise(Inclusion = mean(sd_theta),
Differentiation = mean(lag_difference_score)) %>% pivot_longer(cols = c("Inclusion", "Lag_Differentiation"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
#plotting the raw data
agg %>% group_by(Date) %>% summarise(Inclusion = mean(sd_theta),
Differentiation = mean(lag_difference_score)) %>% pivot_longer(cols = c("Inclusion", "Differentiation"), names_to = "Need") %>%
ggplot()+
aes(x = Date, y = value, color = Need)+
geom_line()+
geom_point()
View(results)
View(agg)
f1 <- bf(sd_theta ~ 1 + lag_sd_theta + lag_difference_score + lag_sd_theta:lag_difference_score + (1|Parti))
get_prior(f1)
get_prior(f1, data = agg)
# Finding prior for random intercept
agg %>% group_by(Parti) %>% summarise(mean = mean(sd_theta),
sd = sd(sd_theta))
# Finding prior for random intercept
agg %>% group_by(Parti) %>% summarise(mean = mean(sd_theta),
sd = sd(sd_theta)) %>% sd(mean)
# Finding prior for random intercept
agg %>% group_by(Parti) %>% summarise(mean = mean(sd_theta),
sd = sd(sd_theta)) %>% summarise(sd = sd(mean))
# Finding prior for random intercept
agg %>% group_by(Parti) %>% summarise(mean = mean(sd_theta),
sd = sd(sd_theta)) %>% summarise(mean = mean,
sd = sd,
sd_of_mean = sd(mean))
# Finding prior for random intercept
agg %>% group_by(Parti) %>% summarise(mean = mean(sd_theta),
sd = sd(sd_theta)) %>% summarise(Parti = Parti,
mean = mean,
sd = sd,
sd_of_mean = sd(mean))
# Finding prior for random intercept
agg %>% group_by(Parti) %>% summarise(mean = mean(sd_theta),
sd = sd(sd_theta)) %>% summarise(Parti = Parti,
mean = mean,
sd = sd,
mean_of_mean = mean(mean),
sd_of_mean = sd(mean))
f1 <- bf(sd_theta ~ ar(1 + lag_sd_theta + lag_difference_score + lag_sd_theta:lag_difference_score + (1|Parti)))
get_prior(f1, data = agg)
f1 <- bf(sd_theta ~ ar(1 + lag_sd_theta + lag_difference_score + lag_sd_theta:lag_difference_score, time = Date, gr = Parti))
get_prior(f1, data = agg)
f1 <- bf(sd_theta ~ ar(1 + lag_sd_theta + lag_difference_score, time = Date, gr = Parti))
get_prior(f1, data = agg)
f1 <- bf(sd_theta ~ 1 + lag_sd_theta + lag_difference_score + lag_sd_theta:lag_difference_score + ar(time = Date, gr))
get_prior(f1, data = agg)
f1 <- bf(sd_theta ~ 1 + lag_sd_theta + lag_difference_score + lag_sd_theta:lag_difference_score + ar(time = Date, gr = Parti))
get_prior(f1, data = agg)
f1 <- bf(sd_theta ~ 1 + lag_sd_theta + lag_difference_score + lag_sd_theta:lag_difference_score + (1|Parti) + ar(time = Date, gr = Parti))
get_prior(f1, data = agg)
f1 <- bf(sd_theta ~ 1 + lag_sd_theta + lag_difference_score + lag_sd_theta:lag_difference_score + (1|Parti))
get_prior(f1, data = agg)
# Finding prior for random intercept
agg %>% group_by(Parti) %>% summarise(mean = mean(sd_theta),
sd = sd(sd_theta)) %>% summarise(Parti = Parti,
mean = mean,
sd = sd,
mean_of_mean = mean(mean),
sd_of_mean = sd(mean))
# Finding prior for random intercept
agg %>% group_by(Parti) %>% summarise(mean = mean(sd_theta),
sd = sd(sd_theta)) %>% summarise(Parti = Parti,
mean = mean,
sd = sd,
mean_of_mean = mean(mean),
sd_of_mean = sd(mean))
get_prior(f1, data = agg)
# Finding prior for random intercept
agg %>% group_by(Parti, Date) %>% summarise(mean = mean(sd_theta),
sd = sd(sd_theta)) #%>% summarise(Parti = Parti,
# Finding prior for random intercept
agg %>% group_by(Parti, Date) %>% summarise(mean = mean(sd_theta),
sd = sd(sd_theta)) %>% summarise(Parti = Parti,
mean = mean,
sd = sd,
mean_of_mean = mean(mean),
sd_of_mean = sd(mean))
# Finding prior for random intercept
agg %>% group_by(Parti, Date) %>% summarise(mean = mean(sd_theta),
sd = sd(sd_theta)) %>% summarise(mean_of_mean = mean(mean),
sd_of_mean = sd(mean))
# Finding prior for random intercept
means <- agg %>% group_by(Parti, Date) %>% summarise(mean = mean(sd_theta),
sd = sd(sd_theta)) %>% summarise(mean_of_mean = mean(mean),
sd_of_mean = sd(mean))
mean(means$mean_of_mean)
sd(means$mean_of_mean)
mean(means$mean_of_mean)
agg %>% group_by(Parti) %>% summarise(mean = mean(sd_theta), sd = sd(sd_theta)) %>% summarise(mean = mean(mean), sd= sd(sd))
agg %>% group_by(Parti) %>% summarise(mean = mean(sd_theta), sd = sd(sd_theta)) %>% summarise(mean = mean(mean), sd= sd(sd))
mean(means$mean_of_mean)
sd(means$mean_of_mean)
View(means)
agg %>% group_by(Parti) %>% summarise(mean = mean(sd_theta), sd = sd(sd_theta)) %>% summarise(mean = mean(mean), sd= sd(sd))
mean(means$mean_of_mean)
sd(means$mean_of_mean)
mean(means$sd_of_mean)
#checking out the outome variable
summary(agg$sd_theta)
get_prior(f1, data = agg)
priors <- c(
prior(exponential(1), class = sigma),
prior(poisson(link = "log"), class = Intercept)
)
get_prior(f1, data = agg)
ggplot(agg, aes(x = sd_theta)) +
geom_density()
View(agg)
# Adding a lag column for the predictors - difference_score and sd_theta
agg <- agg %>% group_by(Parti) %>% mutate(
lag_difference_score = lag(difference_score ),
lag_sd_theta = lag(sd_theta)
) %>% ungroup()
summary(agg$sd_theta)
summary(agg$mean)
summary(agg$mean_theta)
# Adding a lag column for the predictors - difference_score and sd_theta
agg <- agg %>% group_by(Parti) %>% mutate(
lag_difference_score = lag(difference_score ),
lag_sd_theta = lag(sd_theta)
) %>% ungroup() %>% mutate(
Inclusion = 1/sd_theta
)
agg %>% ggplot()+
geom_point(aes(x = Date, y= sd_theta), color = "Blue")+
geom_point(aes(x = Date, y = Inclusion), color = "Red")
agg %>% ggplot()+
geom_point(aes(x = Date, y= sd_theta), color = "Blue")#+
agg %>% ggplot()+
geom_point(aes(x = Date, y= sd_theta), color = "Blue")+
geom_point(aes(x = Date, y = Inclusion), color = "Red")
agg %>% ggplot()+
geom_point(aes(x = Date, y= sd_theta), color = "Blue")#+
agg %>% ggplot()+
geom_point(aes(x = Date, y= sd_theta), color = "Blue")+
geom_line()
agg %>% ggplot()+
geom_point(aes(x = Date, y= sd_theta), color = "Blue")+
geom_line(aes(x = Date, y= sd_theta), color = "Blue")
agg %>% ggplot()+
geom_point(aes(x = Date, y= sd_theta), color = "Blue")+
geom_smooth()
# Adding a lag column for the predictors - difference_score and sd_theta
agg <- agg %>% group_by(Parti) %>% mutate(
lag_difference_score = lag(difference_score ),
lag_sd_theta = lag(sd_theta)
) %>% ungroup() %>% mutate(
Inclusion = max(sd_theta) - sd_theta
)
agg %>% ggplot()+
geom_point(aes(x = Date, y= sd_theta), color = "Blue")+
geom_point(aes(x = Date, y = Inclusion), color = "Red")
# Adding a lag column for the predictors - difference_score and sd_theta
agg <- agg  %>%  mutate(
Inclusion = max(sd_theta) - sd_theta,
Differentiation = difference_score
) %>% group_by(Parti) %>% mutate(
Lag_inclusion = lag(Inclusion),
Lag_differentiation = lag(Differentiation)
)
ggplot(agg, aes(x = Inclusion)) +
geom_density()
# Adding a lag column for the predictors - difference_score and sd_theta
agg <- agg  %>%  mutate(
Inclusion = sd_theta,
Differentiation = difference_score
) %>% group_by(Parti) %>% mutate(
Lag_inclusion = lag(Inclusion),
Lag_differentiation = lag(Differentiation)
)
ggplot(agg, aes(x = Inclusion)) +
geom_density()
f1 <- bf(sd_theta ~ 1 + lag_sd_theta + lag_difference_score + lag_sd_theta:lag_difference_score + (1|Parti), family = poisson)
get_prior(f1, data = agg)
priors <- c(
prior(normal(0.4, 0.1), class = Intercept),
prior(normal(0, 0.2), class = b),
prior(normal(0.4486, 0.2428), class = sd)
)
prior_m1 <- c(
prior(normal(0.4, 0.1), class = Intercept),
prior(normal(0, 0.2), class = b),
prior(normal(0.4486, 0.2428), class = sd)
)
# Running the model
m1 <- brm(
formula = f1,
data = agg,
family = poisson(),
prior = prior_m1,
sample_prior = "only",
chains = 1,
cores = 1,
backend = "cmdstanr",
file = here("models", "m1")
)
prior_m1 <- c(
prior(normal(0.4, 0.1), class = Intercept),
prior(normal(0, 0.2), class = b),
prior(normal(0.4486, 0.2428), class = sd),
prior(exponential(1), class = sigma)
)
# Running the model
m1 <- brm(
formula = f1,
data = agg,
family = normal(),
prior = prior_m1,
sample_prior = "only",
chains = 1,
cores = 1,
backend = "cmdstanr",
file = here("models", "m1")
)
f1 <- bf(sd_theta ~ 1 + lag_sd_theta + lag_difference_score + lag_sd_theta:lag_difference_score + (1|Parti))
prior_m1 <- c(
prior(normal(0.4, 0.1), class = Intercept),
prior(normal(0, 0.2), class = b),
prior(normal(0.4486, 0.2428), class = sd),
prior(exponential(1), class = sigma)
)
# Running the model
m1 <- brm(
formula = f1,
data = agg,
family = normal(),
prior = prior_m1,
sample_prior = "only",
chains = 1,
cores = 1,
backend = "cmdstanr",
file = here("models", "m1")
)
# Running the model
m1 <- brm(
formula = f1,
data = agg,
family = gaussian(),
prior = prior_m1,
sample_prior = "only",
chains = 1,
cores = 1,
backend = "cmdstanr",
file = here("models", "m1")
)
hep <- complete.cases(agg)
hep <- filter(complete.cases(agg))
hep <- filter(complete.cases(agg) == T)
hep <-agg[complete.cases(agg)]
hep <-na.omit(agg)
# Running the model
m1 <- brm(
formula = f1,
data = na.omit(agg),
family = gaussian(),
prior = prior_m1,
sample_prior = "only",
chains = 1,
cores = 1,
backend = "cmdstanr",
file = here("models", "m1")
)
