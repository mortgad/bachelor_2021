legend.position = "none")
# Function for setting color theme
Darjeeling1 <- function(no_of_colors){
colors = wesanderson::wes_palette("Darjeeling1", no_of_colors, type = "continuous")
return(colors)
}
hep <- Darjeeling1(2)
print(hep)
############################# LENGTH OF SPEECHES #######################################
# Wrangling
raw_df %>% mutate(text_length = str_length(text)) %>%
group_by(Year) %>%
summarise(mean = mean(text_length),
median = median(text_length),
fifth = quantile(text_length, probs = 0.05),
nintyfifth = quantile(text_length, probs = 0.95)
) %>% pivot_longer(!Year) %>%
# Plotting
ggplot()+
aes(x = Year, y = value, color = name, linetype = name)+
geom_line()+
guides(linetype = FALSE)+
scale_color_manual(labels = c("5th %ile", "Mean", "Median", "95th %ile"),
values = Darjeeling1(length(unique(Parties))))+
labs(x = "Year",
y = "Speech length",
title = "Speech legnth pr. year")+
theme(legend.title = element_blank(), legend.key = element_rect(color = alpha("black", 0.2)))
############################# LENGTH OF SPEECHES #######################################
# Wrangling
raw_df %>% mutate(text_length = str_length(text)) %>%
group_by(Year) %>%
summarise(mean = mean(text_length),
median = median(text_length),
fifth = quantile(text_length, probs = 0.05),
nintyfifth = quantile(text_length, probs = 0.95)
) %>% pivot_longer(!Year) %>%
# Plotting
ggplot()+
aes(x = Year, y = value, color = name, linetype = name)+
geom_line()+
guides(linetype = FALSE)+
scale_color_manual(labels = c("5th %ile", "Mean", "Median", "95th %ile"),
values = Darjeeling1(length(unique(name))))+
labs(x = "Year",
y = "Speech length",
title = "Speech legnth pr. year")+
theme(legend.title = element_blank(), legend.key = element_rect(color = alpha("black", 0.2)))
############################# LENGTH OF SPEECHES #######################################
# Wrangling
raw_df %>% mutate(text_length = str_length(text)) %>%
group_by(Year) %>%
summarise(mean = mean(text_length),
median = median(text_length),
fifth = quantile(text_length, probs = 0.05),
nintyfifth = quantile(text_length, probs = 0.95)
) %>% pivot_longer(!Year) %>%
# Plotting
ggplot()+
aes(x = Year, y = value, color = name, linetype = name)+
geom_line()+
guides(linetype = FALSE)+
scale_color_manual(labels = c("5th %ile", "Mean", "Median", "95th %ile"),
values = Darjeeling1(4))+
labs(x = "Year",
y = "Speech length",
title = "Speech legnth pr. year")+
theme(legend.title = element_blank(), legend.key = element_rect(color = alpha("black", 0.2)))
############################ ACCUMULATED NO. OF CHARACTERS FOR EACH PARTY ###################################
raw_df %>% mutate(string_length = str_length(text)) %>% group_by(Parti) %>%
summarize(sum = sum(string_length)) %>%
ggplot()+
aes(x = reorder(Parti, -sum), y = sum, fill = Parti)+
geom_col(width=0.5, position='dodge') +
scale_fill_manual(values = )+
labs(y="Accumulated characters in speeches", x="Parti", title = "Total length of speeches for each party") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
legend.position = "none")
############################ ACCUMULATED NO. OF CHARACTERS FOR EACH PARTY ###################################
raw_df %>% mutate(string_length = str_length(text)) %>% group_by(Parti) %>%
summarize(sum = sum(string_length)) %>%
ggplot()+
aes(x = reorder(Parti, -sum), y = sum, fill = Parti)+
geom_col(width=0.5, position='dodge') +
scale_fill_manual(values = Darjeeling1(16) )+
labs(y="Accumulated characters in speeches", x="Parti", title = "Total length of speeches for each party") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
legend.position = "none")
raw_df %>%
count(Parti) %>%
ggplot()+
aes(x = reorder(Parti, -n), y = n, fill = Parti, label = n)+
geom_col(width=0.5, position='dodge') +
scale_fill_manual(values = Darjeeling1(16))
raw_df %>%
count(Parti) %>%
ggplot()+
aes(x = reorder(Parti, -n), y = n, fill = Parti, label = n)+
geom_col(width=0.5, position='dodge') +
scale_fill_manual(values = Darjeeling1(16))+
geom_text(position=position_dodge(0.5), vjust=-.50) +
labs(y="Count", x="Parti", title = "Number of speeches from each party") +
ylim(0, 60000)+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
legend.position = "none")
############################# LENGTH OF SPEECHES #######################################
# Wrangling
raw_df %>% mutate(text_length = str_length(text)) %>%
group_by(Year) %>%
summarise(mean = mean(text_length),
median = median(text_length),
fifth = quantile(text_length, probs = 0.05),
nintyfifth = quantile(text_length, probs = 0.95)
) %>% pivot_longer(!Year) %>%
# Plotting
ggplot()+
aes(x = Year, y = value, color = name, linetype = name)+
geom_line(size = 4)+
guides(linetype = FALSE)+
scale_color_manual(labels = c("5th %ile", "Mean", "Median", "95th %ile"),
values = Darjeeling1(4))+
labs(x = "Year",
y = "Speech length",
title = "Speech legnth pr. year")+
theme(legend.title = element_blank(), legend.key = element_rect(color = alpha("black", 0.2)))
############################# LENGTH OF SPEECHES #######################################
# Wrangling
raw_df %>% mutate(text_length = str_length(text)) %>%
group_by(Year) %>%
summarise(mean = mean(text_length),
median = median(text_length),
fifth = quantile(text_length, probs = 0.05),
nintyfifth = quantile(text_length, probs = 0.95)
) %>% pivot_longer(!Year) %>%
# Plotting
ggplot()+
aes(x = Year, y = value, color = name, linetype = name)+
geom_line(size = 2)+
guides(linetype = FALSE)+
scale_color_manual(labels = c("5th %ile", "Mean", "Median", "95th %ile"),
values = Darjeeling1(4))+
labs(x = "Year",
y = "Speech length",
title = "Speech legnth pr. year")+
theme(legend.title = element_blank(), legend.key = element_rect(color = alpha("black", 0.2)))
############################# LENGTH OF SPEECHES #######################################
# Wrangling
raw_df %>% mutate(text_length = str_length(text)) %>%
group_by(Year) %>%
summarise(mean = mean(text_length),
median = median(text_length),
fifth = quantile(text_length, probs = 0.05),
nintyfifth = quantile(text_length, probs = 0.95)
) %>% pivot_longer(!Year) %>%
# Plotting
ggplot()+
aes(x = Year, y = value, color = name, linetype = name)+
geom_line(size = 1)+
guides(linetype = FALSE)+
scale_color_manual(labels = c("5th %ile", "Mean", "Median", "95th %ile"),
values = Darjeeling1(4))+
labs(x = "Year",
y = "Speech length",
title = "Speech legnth pr. year")+
theme(legend.title = element_blank(), legend.key = element_rect(color = alpha("black", 0.2)))
# loading packages
pacman::p_load(tidyverse,stringdist, overlapping, lubridate)
# Setting up the theme
theme_set(theme_minimal())
# Load results dataframe
results <- read_csv("./data/agg_results_2009_2021.csv")
results %>%  group_by(Parti, Month) %>% summarise(mean = mean(difference_score)) %>% ungroup() %>% group_by(Month) %>% summarise(mean = mean(mean)) %>% ungroup() %>%
ggplot()+
aes(x = Month, y = mean)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(x = "Time",y = "Mean difference score", title = "Wordshoal - Level of polarization in Folketinget")
View(results)
# Loading data
files <- list.files("-/data/wordshoal_results/", pattern = "*.csv")
# Loading data
files <- list.files("-/data/wordshoal_results/", pattern = ".csv")
# Loading data
files <- list.files("-/data/wordshoal_results/", pattern = "csv")
?list.files
# Loading data
files <- list.files("-/data/wordshoal_results/", pattern = "*csv")
# Loading data
files <- list.files("-/data/wordshoal_results/", pattern = "*.csv")
# Loading data
files <- list.files("./data/wordshoal_results/", pattern = "*.csv")
results <- map_df(files, read_csv)
# Loading data
files <- list.files("./data/wordshoal_results/", pattern = "*.csv", full.names = T)
results <- map_df(files, read_csv)
View(results)
View(results)
results %>% group_by(month_year_id) %>% count(row_names)
results %>% group_by(month_year_id) %>% count()
results %>% group_by(month_year_id) %>% count() %>% arrange(-n)
results %>% filter(month_year_id == "2017_5") %>% count(row_names)
results %>% filter(month_year_id == "2017_5") %>% count(Parti)
results %>% group_by(month_year_id) %>% count() %>% arrange(-n)
results %>% filter(month_year_id == "2016_5") %>% count(Parti)
results %>% group_by(month_year_id) %>% count() %>% arrange(-n)
results %>% filter(month_year_id == "148	") %>% count(Parti)
results %>% group_by(month_year_id) %>% count() %>% arrange(-n)
results %>% filter(month_year_id == "2019_10") %>% count(Parti)
results %>% filter(month_year_id == "2019_10") %>%
ggplot()+
aes(x = theta) %>%
geom_point()
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value) %>%
geom_point()
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
theme(axis.title.y = "none")
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
theme(axis.title.y = "n")
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
theme(axis.title.y = element_blank())
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
theme(axis.title.y = element_blank(),
axis.ticks.y = element_blank())
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
theme(axis.title.y = element_blank())#,
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
theme(axis.title.y = element_blank(),
axis.text.y = element_blank())
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", values = 10, type = "continuous"))
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", values = 10, type = "continuous"))+
theme(axis.title.y = element_blank(),
axis.text.y = element_blank())
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", n = 10, type = "continuous"))+
theme(axis.title.y = element_blank(),
axis.text.y = element_blank())
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", n = 10, type = "continuous"))+
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
legend.position = "none")
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
ylim(0,1)
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
ylim(0,2)
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
ylim(0,2)+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", n = 10, type = "continuous"))+
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
legend.position = "none")
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
ylim(0,3)+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", n = 10, type = "continuous"))+
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
legend.position = "none")
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, y = y_value, color = Parti) %>%
geom_point()+
ylim(0,4)+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", n = 10, type = "continuous"))+
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
legend.position = "none")
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, color = Parti) +
stat_function(fun = dnorm)
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>%
ggplot()+
aes(x = theta, color = Parti) +
stat_function(fun = dnorm)
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti)
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
ggplot()+
aes(x = theta, color = Parti) +
stat_function(fun = dnorm)
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
ggplot()+
aes(x = theta, color = Parti) +
stat_function(fun = dnorm)+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", n = 10, type = "continuous"))+
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
legend.position = "none")
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
ggplot()+
aes(x = theta, color = Parti) +
stat_function(fun = dnorm)+
xlim(-5,5)
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
ggplot()+
aes(x = theta, color = Parti) +
stat_function(fun = dnorm)+
xlim(-5,5)+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", n = 10, type = "continuous"))+
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
legend.position = "none")
ggplot(data.frame(x = c(-4, 4)), aes(x)) +
mapply(function(mean, sd, col) {
stat_function(fun = dnorm, args = list(mean = mean, sd = sd), col = col)
},
# enter means, standard deviations and colors here
mean = c(0, 1, .5),
sd = c(1, .5, 2),
col = c('red', 'blue', 'green')
)
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
summarise(mean = mean(theta),
sd = sd(theta)
col = seq(1,length(unique(Parti))))
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
summarise(mean = mean(theta),
sd = sd(theta),
col = seq(1,length(unique(Parti))))
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
summarise(mean = mean(theta),
sd = sd(theta),
col = seq(1,length(unique(results$Parti))))
results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
summarise(mean = mean(theta),
sd = sd(theta))
means <- results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
summarise(mean = mean(theta),
sd = sd(theta))
View(means)
means <- results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
summarise(mean = mean(theta),
sd = sd(theta)) %>% ungroup
means <- results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
summarise(mean = mean(theta),
sd = sd(theta)) %>% ungroup()
ggplot(data.frame(x = c(-4, 4)), aes(x)) +
mapply(function(mean, sd, col) {
stat_function(fun = dnorm, aes(x = ), col = col)
},
# enter means, standard deviations and colors here
mean = means$mean,
sd = means$sd,
col = seq(1,length(means))
)
means$mean
seq(1,length(means)
seq(1,length(means))
seq(1,length(means))
seq(1,length(means$mean))
ggplot(data.frame(x = c(-4, 4)), aes(x)) +
mapply(function(mean, sd, col) {
stat_function(fun = dnorm, aes(x = ), col = col)
},
# enter means, standard deviations and colors here
mean = means$mean,
sd = means$sd,
col = seq(1,length(means$mean))
)
ggplot(data.frame(x = c(-4, 4)), aes(x)) +
mapply(function(mean, sd, col) {
stat_function(fun = dnorm, aes(x = ), col = wesanderson::wes_palette("Darjeeling1", n = 12, type = "continuous")[col])
},
# enter means, standard deviations and colors here
mean = means$mean,
sd = means$sd,
col = seq(1,length(means$mean))
)
col = seq(1,10)) %>% ungroup()
means <- results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
summarise(mean = mean(theta),
sd = sd(theta)
col = seq(1,10)) %>% ungroup()
means <- results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
summarise(mean = mean(theta),
sd = sd(theta),
col = seq(1,10)) %>% ungroup()
View(means)
means <- results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
summarise(mean = mean(theta),
sd = sd(theta)) %>% ungroup() %>% mutate(col = seq(1,10))
View(means)
means <- results %>% filter(month_year_id == "2019_10") %>% mutate(y_value = 1) %>% group_by(Parti) %>%
summarise(mean = mean(theta), sd = sd(theta)) %>% ungroup() %>%
mutate(col = wesanderson::wes_palette("Darjeeling1", n = 10, type = "continuous"))
View(means)
ggplot(data.frame(x = c(-4, 4)), aes(x)) +
mapply(function(mean, sd, col) {
stat_function(fun = dnorm, aes(x = ), col = col)
},
# enter means, standard deviations and colors here
mean = means$mean,
sd = means$sd,
col = means$col
)
ggplot(data.frame(results, aes(theta)) +
ggplot(results, aes(theta)) +
mapply(function(mean, sd, col) {
stat_function(fun = dnorm, aes(x = ), col = col)
},
# enter means, standard deviations and colors here
mean = means$mean,
sd = means$sd,
col = means$col
)
ggplot(results, aes(theta)) +
ggplot(results, aes(theta)) +
mapply(function(mean, sd, col) {
stat_function(fun = dnorm, aes(x = ), col = col)
},
# enter means, standard deviations and colors here
mean = means$mean,
sd = means$sd,
col = means$col
)
stat_function(fun = dnorm, args = list(mean = mean, sd = sd), col = col)
ggplot(results, aes(theta)) +
mapply(function(mean, sd, col) {
stat_function(fun = dnorm, args = list(mean = mean, sd = sd), col = col)
},
# enter means, standard deviations and colors here
mean = means$mean,
sd = means$sd,
col = means$col
)
ggplot(results) +
mapply(function(mean, sd, col) {
stat_function(fun = dnorm, args = list(mean = mean, sd = sd), col = col)
},
# enter means, standard deviations and colors here
mean = means$mean,
sd = means$sd,
col = means$col
)
ggplot(results) +
mapply(function(mean, sd, col) {
stat_function(fun = dnorm, args = list(mean = mean, sd = sd), col = col)
},
# enter means, standard deviations and colors here
mean = means$mean,
sd = means$sd,
col = means$col
)+
xlim(-1,1)
results %>% group_by(month_year_id) %>% count() %>% arrange(-n)
results %>% group_by(month_year_id) %>% count() %>% arrange(n)
results %>% filter(month_year_id == "2015_7") %>% count(Parti)
results %>% group_by(month_year_id) %>% count() %>% arrange(n)
results %>% filter(month_year_id == "39	") %>% count(Parti)
results %>% group_by(month_year_id) %>% count() %>% arrange(n)
results %>% filter(month_year_id == "40") %>% count(Parti)
results %>% group_by(month_year_id) %>% count() %>% arrange(n)
results %>% filter(month_year_id == "2013_9") %>% count(Parti)
results %>% group_by(month_year_id) %>% count() %>% arrange(n)
results %>% group_by(month_year_id) %>% count() %>% arrange(-n)
results %>% filter(month_year_id == "149") %>% count(Parti)
count
results %>% group_by(month_year_id) %>% count() %>% arrange(-n)
results %>% filter(month_year_id == "2019_10") %>% count(Parti)
View(raw_df)
??flux
