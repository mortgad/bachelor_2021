month_year_id = paste0(Year,"_", month(Date)) # Making a month and year unique variable
) %>%
#removing documents with less than 10 speaches
group_by(id) %>%
filter(n() > 10) %>% ungroup() %>%
# Removing all formand because of procedural and lots of mistakes.
filter(!Title %in% c("Formanden","Formand")) %>%
# filtering out all duplicates
group_by(doc_id) %>% filter(n() < 2) %>% ungroup()
# Checking party labels
df %>% group_by(Parti) %>% count() %>% arrange(-n)
############## corpus per month ###################
years = seq(2012,2013) # Years to loop through
df_subset <- df %>% filter(Year %in% years)
months = unique(df_subset$month_year_id) # input list
i=1
wordshoaler <- function(month) {
cat(paste0("[ ] Shoaling Month ", month, ". Month: ", i, " out of ", length(months), "\n"))
shoal_df = df_subset %>% filter(month_year_id == paste0(month))
corpuseret = quanteda::corpus(shoal_df)
dfmmm <- dfm(tokens(corpuseret), remove_punct = TRUE, ignoredFeatures = stopwords("danish")) # matrix making
wordshoalfit <- wordshoal::textmodel_wordshoal(dfmmm, groups = docvars(corpuseret, "id"),
authors = docvars(corpuseret, "Name"))
author_positions <- summary(wordshoalfit)$estimated.author.positions
author_positions$row_names <- rownames(author_positions)
fitdf <- merge(author_positions,
docvars(corpuseret),
by.x = "row_names", by.y = "Name")
fitdf <- subset(fitdf, !duplicated(row_names))
thetascores <<- rbind(thetascores, fitdf)
i <<- i + 1
}
thetascores <- data.frame()
map(months, wordshoaler)
# writing the estimates
filename = paste0("./data/wordshoal_results/wordshoal_estimates_", min(years), "_", max(years), ".csv")
write_csv(thetascores, filename)
############## corpus per month ###################
years = seq(2014,2014) # Years to loop through
df_subset <- df %>% filter(Year %in% years)
months = unique(df_subset$month_year_id) # input list
i=1
wordshoaler <- function(month) {
cat(paste0("[ ] Shoaling Month ", month, ". Month: ", i, " out of ", length(months), "\n"))
shoal_df = df_subset %>% filter(month_year_id == paste0(month))
corpuseret = quanteda::corpus(shoal_df)
dfmmm <- dfm(tokens(corpuseret), remove_punct = TRUE, ignoredFeatures = stopwords("danish")) # matrix making
wordshoalfit <- wordshoal::textmodel_wordshoal(dfmmm, groups = docvars(corpuseret, "id"),
authors = docvars(corpuseret, "Name"))
author_positions <- summary(wordshoalfit)$estimated.author.positions
author_positions$row_names <- rownames(author_positions)
fitdf <- merge(author_positions,
docvars(corpuseret),
by.x = "row_names", by.y = "Name")
fitdf <- subset(fitdf, !duplicated(row_names))
thetascores <<- rbind(thetascores, fitdf)
i <<- i + 1
}
thetascores <- data.frame()
map(months, wordshoaler)
# writing the estimates
filename = paste0("./data/wordshoal_results/wordshoal_estimates_", min(years), "_", max(years), ".csv")
write_csv(thetascores, filename)
# loading packages
pacman::p_load(tidyverse,stringdist)
# Importing data
csv_files = list.files(pattern="*.csv", path = "data/wordshoal_results/", full.names = T)
df = map_df(csv_files, read_csv)
df$time <- as.Date(paste(year(df$Date), month(df$Date), "01", sep = "-"))
View(df)
hep <- df %>% filter(Year == 2013) %>% group_by(Parti) %>% mutate(mean_theta = mean(theta), sd_theta = sd(theta))
View(hep)
hep %>% group_by(Parti) %>%
ggplot()+
aes(theta)+
stat_summary(fun = dnorm, )
hep %>% group_by(Parti) %>%
ggplot()+
aes(theta)+
stat_summary(fun = dnorm )
hep %>% group_by(Parti) %>%
ggplot()+
aes(theta)+
stat_summary(fun = dnorm )
hep %>% group_by(Parti) %>%
ggplot()+
aes(theta)+
stat_function(fun = dnorm )
hep %>% group_by(Parti) %>%
ggplot()+
aes(theta, color = Parti)+
stat_function(fun = dnorm )
hep %>% group_by(Parti) %>%
ggplot()+
aes(theta, color = Parti)+
stat_function(fun = dnorm )+
facet_wrap(Parti)
hep %>% group_by(Parti) %>%
ggplot()+
aes(theta, color = Parti)+
stat_function(fun = dnorm )+
facet_wrap(~Parti)
hep %>% group_by(Parti) %>%
ggplot()+
aes(theta, color = Parti)+
stat_function(fun = dnorm )
df %>% group_by(Parti) %>%
ggplot()+
aes(theta, color = Parti)+
stat_function(fun = dnorm )
agg <- df %>% group_by(Parti, time) %>% summarise(mean = mean(theta), sd = sd(theta)) %>% drop_na(sd)
agg %>% group_by(Parti) %>%
ggplot()+
stat_function(fun = dnorm, args = list(mean = mean, sd = sd)))
agg %>% group_by(Parti) %>%
ggplot()+
stat_function(fun = dnorm, args = list(mean = mean, sd = sd))
agg %>% group_by(Parti) %>%
ggplot()+
stat_function(fun = dnorm, args = list(mean = agg$mean, sd = agg$sd))
df %>% group_by(name) %>% mutate(mean_name = mean(theta))
df %>% group_by(Name) %>% mutate(mean_name = mean(theta))
df %>% group_by(row_names) %>% mutate(mean_name = mean(theta))
hep <- df %>% group_by(row_names) %>% mutate(mean_name = mean(theta))
View(hep)
hep %>%
ggplot()+
aes(x = time, y = mean_name)+
geom_line
hep %>% filter(Parti %in% c("Venste", "Socialdemokratiet"))
hep %>% filter(Parti %in% c("Venste", "Socialdemokratiet")) %>%
ggplot()+
aes(x = time, y = mean_name)+
geom_line()
agg %>% group_by(Year) %>% summarise(mean = mean(Theta))
agg %>% mutate(Year = year(time)) %>% group_by(Year) %>% summarise(mean = mean(Theta))
agg %>% mutate(Year = year(time)) %>% group_by(Year) %>% summarise(mean = mean(theta))
agg %>% mutate(Year = year(time)) %>% group_by(Year) %>% summarise(mean = mean(mean))
agg %>% mutate(Year = year(time)) %>% group_by(Year, Parti) %>% summarise(mean = mean(mean))
agg %>% filter(Parti %in% c("Venste", "Socialdemokratiet")) %>%  mutate(Year = year(time)) %>% group_by(Year, Parti) %>% summarise(mean = mean(mean))
agg %>% filter(Parti %in% c("Venstre", "Socialdemokratiet")) %>%  mutate(Year = year(time)) %>% group_by(Year, Parti) %>% summarise(mean = mean(mean))
agg %>% filter(Parti %in% c("Venstre", "Socialdemokratiet")) %>%  mutate(Year = year(time)) %>% group_by(Year, Parti) %>% summarise(mean = mean(mean)) %>%
ggplot()+
aes(x = Year, y = mean, color = Parti)+
geom_point()+
geom_line()
agg %>% filter(Parti %in% c("Venstre", "Socialdemokratiet")) %>%  mutate(Year = year(time)) %>% group_by(Year, Parti) %>% summarise(mean = mean(mean)) %>%
ggplot()+
aes(x = Year, y = mean, color = Parti)+
geom_point()+
geom_line()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling"))
agg %>% filter(Parti %in% c("Venstre", "Socialdemokratiet")) %>%  mutate(Year = year(time)) %>% group_by(Year, Parti) %>% summarise(mean = mean(mean)) %>%
ggplot()+
aes(x = Year, y = mean, color = Parti)+
geom_point()+
geom_line()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1"))
agg %>% #filter(Parti %in% c("Venstre", "Socialdemokratiet")) %>%
mutate(Year = year(time)) %>% group_by(Year, Parti) %>% summarise(mean = mean(mean)) %>%
ggplot()+
aes(x = Year, y = mean, color = Parti)+
geom_point()+
geom_line()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1"))
agg %>% #filter(Parti %in% c("Venstre", "Socialdemokratiet")) %>%
mutate(Year = year(time)) %>% group_by(Year, Parti) %>% summarise(mean = mean(mean)) %>%
ggplot()+
aes(x = Year, y = mean, color = Parti)+
geom_point()+
geom_line()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continous"))
agg %>% #filter(Parti %in% c("Venstre", "Socialdemokratiet")) %>%
mutate(Year = year(time)) %>% group_by(Year, Parti) %>% summarise(mean = mean(mean)) %>%
ggplot()+
aes(x = Year, y = mean, color = Parti)+
geom_point()+
geom_line()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous"))
agg %>% filter(!Parti %in% c("Radikale Venstre", "Det Radikale Venstre", "Ny Alliance")) %>%
mutate(Year = year(time)) %>% group_by(Year, Parti) %>% summarise(mean = mean(mean)) %>%
ggplot()+
aes(x = Year, y = mean, color = Parti)+
geom_point()+
geom_line()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous"))
# Aggregated pr year
agg %>% filter(!Parti %in% c("Radikale Venstre", "Det Radikale Venstre", "Ny Alliance")) %>%
mutate(Year = year(time)) %>% group_by(Year, Parti) %>% summarise(mean = mean(mean)) %>%
ggplot()+
aes(x = Year, y = mean, color = Parti)+
geom_point()+
geom_line()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous"))
hep %>%
ggplot()+
aes(x = theta, y = Parti, color = Parti)+
stat_summary(fun = "mean", geom = "point")
df %>% group_by(Name) %>% summarise(mean = mean(theta))
df %>% group_by(row_names) %>% summarise(mean = mean(theta))
df %>% group_by(row_names) %>% summarise(mean = mean(theta), Parti = Parti)
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean = mean(theta), sd = sd(theta))
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean = mean(theta)) %>% filter(!duplicated(mean))
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean)) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
stat_summary(fun = "mean", geom = "point")
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean)) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
stat_summary(fun = "mean", geom = "point")
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean)) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
geom_point()
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
geom_point()
df %>% filter(theta > 3)
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(mean_theta > 3)
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(!row_names == "Thor Pedersen")
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(!row_names == "Thor Pedersen") %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
geom_point()
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(mean_theta < -0.5)
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(!row_names %in% c("Thor Pedersen", "Anders Fogh Rasmussen", "Søren Gade")) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
geom_point()
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(!row_names %in% c("Thor Pedersen", "Anders Fogh Rasmussen", "Søren Gade")) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
geom_point()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous"))
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% #filter(!row_names %in% c("Thor Pedersen", "Anders Fogh Rasmussen", "Søren Gade")) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
geom_point()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous"))
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(mean_theta > 3)
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(!row_names %in% c("Thor Pedersen", "Anders Fogh Rasmussen", "Søren Gade")) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
geom_point()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous"))
View(df)
df %>% filter(theta == 0)
corpuseret = quanteda::corpus(df)
# Importing data
df <- read_csv("./data/folketinget_2009_2021_raw.csv")
# Importing data
df <- read_csv("./data/folketinget_2009_2021_raw.csv")
# Checking party labels
df %>% group_by(Parti) %>% count() %>% arrange(-n)
# Filtering out parties
parties_to_remove <- c("Uden for partierne", "Venstresocialisterne")
df <- df %>%
filter(!Parti %in% parties_to_remove) %>%
# Changing konservative folkeparti
mutate(
Parti = ifelse(Parti == "Konservative Folkeparti","Det Konservative Folkeparti", Parti),
Parti = ifelse(Parti == "Det Radikale Venstre","Radikale Venstre", Parti),
month_year_id = paste0(Year,"_", month(Date)) # Making a month and year unique variable
) %>%
#removing documents with less than 10 speaches
group_by(id) %>%
filter(n() > 10) %>% ungroup() %>%
# Removing all formand because of procedural and lots of mistakes.
filter(!Title %in% c("Formanden","Formand")) %>%
# filtering out all duplicates
group_by(doc_id) %>% filter(n() < 2) %>% ungroup()
corpuseret = quanteda::corpus(df)
corpuseret = quanteda::corpus(df %>% filter(Year = 2012))
corpuseret = quanteda::corpus(df %>% filter(Year = 2011))
corpuseret = quanteda::corpus(df %>% filter(Year == 2011))
dfmmm <- dfm(tokens(corpuseret), remove_punct = TRUE, ignoredFeatures = stopwords("danish")) %>%
dfm_trim(min_termfreq = 0.8, termfreq_type = "quantile",
max_docfreq = 0.1, docfreq_type = "prop") # matrix making
# loading packages
pacman::p_load(tidyverse, corpus, devtools, lubridate, flux, stopwords, seededlda)
# Installing the latest version of quanteda and wordshoal
#devtools::install_github("https://github.com/quanteda/quanteda")
#remotes::install_github("kbenoit/wordshoal")
devtools::install_github("quanteda/quanteda.corpora")
# loading packages
pacman::p_load(tidyverse, corpus, devtools, lubridate, flux, stopwords, seededlda)
# Installing the latest version of quanteda and wordshoal
#devtools::install_github("https://github.com/quanteda/quanteda")
#remotes::install_github("kbenoit/wordshoal")
#devtools::install_github("quanteda/quanteda.corpora")
# Loading the packages
library(quanteda)
library(wordshoal)
library(quanteda.textmodels)
library(quanteda.corpora)
library(quanteda.corpora)
library(quanteda.corpora)
tmod_lda <- textmodel_lda(dfmmm, k = 10)
terms(tmod_lda, 10)
terms(tmod_lda, 20)
# loading packages
pacman::p_load(tidyverse,stringdist)
#################### INSPECTING THE RESULTS ###########################
# Import the results
results <- read_csv("../data/cv_results_subset.csv")
#################### INSPECTING THE RESULTS ###########################
# Import the results
results <- read_csv("./data/cv_results_subset.csv")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
ylim(0, 1)+
labs(y = "Kappa score", title = "Level of polarization in Folketinget")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth()
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth()+
ylim(0, 1)+
labs(y = "Kappa score", title = "Level of polarization in Folketinget")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = linear)+
ylim(0, 1)+
labs(y = "Kappa score", title = "Level of polarization in Folketinget")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "linear")+
ylim(0, 1)+
labs(y = "Kappa score", title = "Level of polarization in Folketinget")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm")+
ylim(0, 1)+
labs(y = "Kappa score", title = "Level of polarization in Folketinget")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.2)+
ylim(0, 1)+
labs(y = "Kappa score", title = "Level of polarization in Folketinget")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.2, color = wesanderson::wes_palette("Darjeeling1")[1])+
ylim(0, 1)+
labs(y = "Kappa score", title = "Level of polarization in Folketinget")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.2, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.2)+
ylim(0, 1)+
labs(y = "Kappa score", title = "Level of polarization in Folketinget")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.2, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.4)+
ylim(0, 1)+
labs(y = "Kappa score", title = "Level of polarization in Folketinget")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.2, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.4)+
ylim(0, 1)+
labs(y = "Kappa score", title = "Level of polarization in Folketinget")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.4)+
ylim(0, 1)+
labs(y = "Kappa score", title = "Level of polarization in Folketinget")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Kappa score", title = "Level of polarization in Folketinget")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "Level of polarization in Folketinget")
# Aggregated pr year
agg %>% filter(!Parti %in% c("Radikale Venstre", "Det Radikale Venstre", "Ny Alliance")) %>%
mutate(Year = year(time)) %>% group_by(Year, Parti) %>% summarise(mean = mean(mean)) %>%
ggplot()+
aes(x = Year, y = mean, color = Parti)+
geom_point()+
geom_line()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous"))+
labs(title = "Wordshoal - Estimated positions for parties per year", y = "Estimated position")
results %>%
group_by(Year) %>%
summarise(kappa = mean(kappa_test)) %>%
ggplot()+
aes(x = Year, y = kappa)+
geom_point()+
geom_line(color = wesanderson::wes_palette("Darjeeling1")[2])+
geom_smooth(method = "lm", alpha = 0.1, color = wesanderson::wes_palette("Darjeeling1")[1], size = 0.5)+
ylim(0, 1)+
labs(y = "Cohen Kappa score", title = "Level of polarization in Folketinget")
df = map_df(csv_files, read_csv)
df$time <- as.Date(paste(year(df$Date), month(df$Date), "01", sep = "-"))
agg <- df %>% group_by(Parti, time) %>% summarise(mean = mean(theta), sd = sd(theta)) %>% drop_na(sd)
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(!row_names %in% c("Thor Pedersen", "Anders Fogh Rasmussen", "Søren Gade")) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
geom_point()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous"))
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(!row_names %in% c("Thor Pedersen", "Anders Fogh Rasmussen", "Søren Gade")) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
geom_point()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous"))+
labs(title = "Wordshoal - Mean estimated position of each member divided by party", x = "Estimated position")+
theme(legend.position = element_blank())
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(!row_names %in% c("Thor Pedersen", "Anders Fogh Rasmussen", "Søren Gade")) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
geom_point()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous"))+
labs(title = "Wordshoal - Mean estimated position of each member divided by party", x = "Estimated position")+
theme(legend.title = element_blank())
theme(legend.position = "none"
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(!row_names %in% c("Thor Pedersen", "Anders Fogh Rasmussen", "Søren Gade")) %>%
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(!row_names %in% c("Thor Pedersen", "Anders Fogh Rasmussen", "Søren Gade")) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
geom_point()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous"))+
labs(title = "Wordshoal - Mean estimated position of each member divided by party", x = "Estimated position")+
theme(legend.position = "none")
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(!row_names %in% c("Thor Pedersen", "Anders Fogh Rasmussen", "Søren Gade")) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
geom_point()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous"))+
labs(title = "Wordshoal - Mean estimated position of each member divided by party", x = "Estimated position")+
theme(legend.position = "none",
ylab(""))
df %>% group_by(row_names) %>% summarise(Parti = Parti, mean_theta = mean(theta)) %>% filter(!duplicated(mean_theta)) %>% filter(!row_names %in% c("Thor Pedersen", "Anders Fogh Rasmussen", "Søren Gade")) %>%
ggplot()+
aes(x = mean_theta, y = Parti, color = Parti)+
geom_point()+
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1", 10, type = "continuous"))+
labs(title = "Wordshoal - Mean estimated position of each member divided by party", x = "Estimated position", y ="")+
theme(legend.position = "none")
