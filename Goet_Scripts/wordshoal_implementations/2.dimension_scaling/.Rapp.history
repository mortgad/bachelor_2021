setwd('/Volumes/Back-ups/UKHCPOL_replication_material/poisson_model_implementations/2.dimension_scaling')
combined_results <- read.csv("dimension_scaling_estimates0.99ps.csv",header=T)#
combined_results <- combined_results[combined_results$session_ref!="session_ref",]#
combined_results_per_session <- combined_results[order(combined_results$session_indicator),]#
combined_results_per_session <- split(combined_results_per_session,combined_results_per_session$session_ref)#
#
correlations <- list()#
for(i in 1:length(combined_results_per_session)){#
  data <- combined_results_per_session[[i]]#
  correlations[[i]] <- data.frame(cor = cor.test(as.numeric(as.character(data$theta)),as.numeric(as.character(data$score)))$estimate)#
#
}#
final_correlations <- do.call(rbind.data.frame,correlations)#
final_correlations <- abs(final_correlations$cor)#
mean(final_correlations)#
#
#asses dimensionality and perc. explained by first dimension#
dimension_data <- unique(data.frame(dimensions = combined_results$dimensions,perc.dim1 = combined_results$perc.dim1, session_ref = combined_results$session_ref))#
mean(as.numeric(as.character(dimension_data$dimensions)))#
mean(as.numeric(as.character(dimension_data$perc.dim1)))
print(paste("Number of dimensions:" ,mean(as.numeric(as.character(dimension_data$dimensions))),sep=""))
print(paste("Perc. of variation explained by first axis: " ,mean(as.numeric(as.character(dimension_data$perc.dim1))),sep=""))
print(paste("Threshold: ",threshold,sep=""))
thresholds <- c(0.75,0.99)
for(threshold in threshold	s){#
combined_results <- read.csv(paste("dimension_scaling_estimates",treshold,"ps.csv",sep=""),header=T)#
combined_results <- combined_results[combined_results$session_ref!="session_ref",]#
combined_results_per_session <- combined_results[order(combined_results$session_indicator),]#
combined_results_per_session <- split(combined_results_per_session,combined_results_per_session$session_ref)#
#
correlations <- list()#
for(i in 1:length(combined_results_per_session)){#
  data <- combined_results_per_session[[i]]#
  correlations[[i]] <- data.frame(cor = cor.test(as.numeric(as.character(data$theta)),as.numeric(as.character(data$score)))$estimate)#
#
}#
final_correlations <- do.call(rbind.data.frame,correlations)#
final_correlations <- abs(final_correlations$cor)#
mean(final_correlations)#
#
#asses dimensionality and perc. explained by first dimension#
dimension_data <- unique(data.frame(dimensions = combined_results$dimensions,perc.dim1 = combined_results$perc.dim1, session_ref = combined_results$session_ref))#
print(paste("Threshold: ",threshold,sep=""))#
print(paste("Number of dimensions: " ,mean(as.numeric(as.character(dimension_data$dimensions))),sep=""))#
print(paste("Perc. of variation explained by first axis: " ,mean(as.numeric(as.character(dimension_data$perc.dim1))),sep=""))#
}
threshold
threshold	s
thresholds
for(threshold in thresholds){#
combined_results <- read.csv(paste("dimension_scaling_estimates",treshold,"ps.csv",sep=""),header=T)#
combined_results <- combined_results[combined_results$session_ref!="session_ref",]#
combined_results_per_session <- combined_results[order(combined_results$session_indicator),]#
combined_results_per_session <- split(combined_results_per_session,combined_results_per_session$session_ref)#
#
correlations <- list()#
for(i in 1:length(combined_results_per_session)){#
  data <- combined_results_per_session[[i]]#
  correlations[[i]] <- data.frame(cor = cor.test(as.numeric(as.character(data$theta)),as.numeric(as.character(data$score)))$estimate)#
#
}#
final_correlations <- do.call(rbind.data.frame,correlations)#
final_correlations <- abs(final_correlations$cor)#
mean(final_correlations)#
#
#asses dimensionality and perc. explained by first dimension#
dimension_data <- unique(data.frame(dimensions = combined_results$dimensions,perc.dim1 = combined_results$perc.dim1, session_ref = combined_results$session_ref))#
print(paste("Threshold: ",threshold,sep=""))#
print(paste("Number of dimensions: " ,mean(as.numeric(as.character(dimension_data$dimensions))),sep=""))#
print(paste("Perc. of variation explained by first axis: " ,mean(as.numeric(as.character(dimension_data$perc.dim1))),sep=""))#
}
for(threshold in thresholds){#
combined_results <- read.csv(paste("dimension_scaling_estimates", threshold,"ps.csv",sep=""),header=T)#
combined_results <- combined_results[combined_results$session_ref!="session_ref",]#
combined_results_per_session <- combined_results[order(combined_results$session_indicator),]#
combined_results_per_session <- split(combined_results_per_session,combined_results_per_session$session_ref)#
#
correlations <- list()#
for(i in 1:length(combined_results_per_session)){#
  data <- combined_results_per_session[[i]]#
  correlations[[i]] <- data.frame(cor = cor.test(as.numeric(as.character(data$theta)),as.numeric(as.character(data$score)))$estimate)#
#
}#
final_correlations <- do.call(rbind.data.frame,correlations)#
final_correlations <- abs(final_correlations$cor)#
mean(final_correlations)#
#
#asses dimensionality and perc. explained by first dimension#
dimension_data <- unique(data.frame(dimensions = combined_results$dimensions,perc.dim1 = combined_results$perc.dim1, session_ref = combined_results$session_ref))#
print(paste("Threshold: ",threshold,sep=""))#
print(paste("Number of dimensions: " ,mean(as.numeric(as.character(dimension_data$dimensions))),sep=""))#
print(paste("Perc. of variation explained by first axis: " ,mean(as.numeric(as.character(dimension_data$perc.dim1))),sep=""))#
}
